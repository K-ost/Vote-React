import React from 'react'
import { answer } from '../interfaces'

interface IFinish {
  info: answer[]
  func: () => void
}

const Finish: React.FC<IFinish> = ({ info, func }) => {
  const countTrue = info.reduce((prev, el) => {
    if (el.isRight === true) {
      prev += 1
    }
    return prev
  }, 0)

  return (
    <div className="finish-test">
      <h2>–†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∞</h2>
      <p>–ü—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤: {countTrue} –∏–∑ {info.length}</p>
      {countTrue === info.length && <p><span className="emoji">üéâ </span> –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—Å–µ –æ—Ç–≤–µ—Ç—ã –≤–µ—Ä–Ω—ã!</p>}
      <ul className="results">
        {info.map(el => (
          <li key={el.id} className={el.isRight ? 'success' : 'danger'}>
            <h4>{el.question}</h4>
            <div className="results-body">
              <div className="results-details">
                {el.value.length !== 0
                  ? <p>–í–∞—à –æ—Ç–≤–µ—Ç: <b>{el.value}</b></p>
                  : <p>–í—ã –Ω–µ —É—Å–ø–µ–ª–∏ –æ—Ç–≤–µ—Ç–∏—Ç—å</p>
                }
                {!el.isRight && <p>–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: <b>{el.answer}</b></p>}
              </div>
              {el.image && <div className="results-img" style={{backgroundImage: `url(${el.image})`}}></div>}
            </div>
          </li>
        ))}
      </ul>
      <button className="btn" onClick={func}>–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –Ω–∞—á–∞–ª—É</button>
    </div>
  )
}

export default Finish